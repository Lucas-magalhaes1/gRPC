// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/tasks.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Tasks.Proto {
  public static partial class TaskService
  {
    static readonly string __ServiceName = "tasks.TaskService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.CreateTaskRequest> __Marshaller_tasks_CreateTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.CreateTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.CreateTaskResponse> __Marshaller_tasks_CreateTaskResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.CreateTaskResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.GetTaskRequest> __Marshaller_tasks_GetTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.GetTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.GetTaskResponse> __Marshaller_tasks_GetTaskResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.GetTaskResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.UpdateTaskRequest> __Marshaller_tasks_UpdateTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.UpdateTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.UpdateTaskResponse> __Marshaller_tasks_UpdateTaskResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.UpdateTaskResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.ListTasksRequest> __Marshaller_tasks_ListTasksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.ListTasksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tasks.Proto.Task> __Marshaller_tasks_Task = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tasks.Proto.Task.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tasks.Proto.CreateTaskRequest, global::Tasks.Proto.CreateTaskResponse> __Method_CreateTask = new grpc::Method<global::Tasks.Proto.CreateTaskRequest, global::Tasks.Proto.CreateTaskResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTask",
        __Marshaller_tasks_CreateTaskRequest,
        __Marshaller_tasks_CreateTaskResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tasks.Proto.GetTaskRequest, global::Tasks.Proto.GetTaskResponse> __Method_GetTask = new grpc::Method<global::Tasks.Proto.GetTaskRequest, global::Tasks.Proto.GetTaskResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTask",
        __Marshaller_tasks_GetTaskRequest,
        __Marshaller_tasks_GetTaskResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tasks.Proto.UpdateTaskRequest, global::Tasks.Proto.UpdateTaskResponse> __Method_UpdateTask = new grpc::Method<global::Tasks.Proto.UpdateTaskRequest, global::Tasks.Proto.UpdateTaskResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTask",
        __Marshaller_tasks_UpdateTaskRequest,
        __Marshaller_tasks_UpdateTaskResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tasks.Proto.ListTasksRequest, global::Tasks.Proto.Task> __Method_ListTasks = new grpc::Method<global::Tasks.Proto.ListTasksRequest, global::Tasks.Proto.Task>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListTasks",
        __Marshaller_tasks_ListTasksRequest,
        __Marshaller_tasks_Task);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Tasks.Proto.TasksReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TaskService</summary>
    [grpc::BindServiceMethod(typeof(TaskService), "BindService")]
    public abstract partial class TaskServiceBase
    {
      /// <summary>
      /// unária
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tasks.Proto.CreateTaskResponse> CreateTask(global::Tasks.Proto.CreateTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// unária
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tasks.Proto.GetTaskResponse> GetTask(global::Tasks.Proto.GetTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// unária
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tasks.Proto.UpdateTaskResponse> UpdateTask(global::Tasks.Proto.UpdateTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Para cobrir streaming, vamos fazer ListTasks como SERVER-STREAMING:
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ListTasks(global::Tasks.Proto.ListTasksRequest request, grpc::IServerStreamWriter<global::Tasks.Proto.Task> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TaskServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateTask, serviceImpl.CreateTask)
          .AddMethod(__Method_GetTask, serviceImpl.GetTask)
          .AddMethod(__Method_UpdateTask, serviceImpl.UpdateTask)
          .AddMethod(__Method_ListTasks, serviceImpl.ListTasks).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TaskServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tasks.Proto.CreateTaskRequest, global::Tasks.Proto.CreateTaskResponse>(serviceImpl.CreateTask));
      serviceBinder.AddMethod(__Method_GetTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tasks.Proto.GetTaskRequest, global::Tasks.Proto.GetTaskResponse>(serviceImpl.GetTask));
      serviceBinder.AddMethod(__Method_UpdateTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tasks.Proto.UpdateTaskRequest, global::Tasks.Proto.UpdateTaskResponse>(serviceImpl.UpdateTask));
      serviceBinder.AddMethod(__Method_ListTasks, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Tasks.Proto.ListTasksRequest, global::Tasks.Proto.Task>(serviceImpl.ListTasks));
    }

  }
}
#endregion
